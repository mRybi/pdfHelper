{"version":3,"sources":["ramkaV5.png","ramka.png","tarcza4.png","components/FileDisplay/FileDisplay.js","view/InsertIntoPDFView.js","helpers/asyncForEach.js","view/PDFMergeView.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FileDisplay","props","ramkaBlob","Blob","bytes","type","ramkaBlobUrl","URL","createObjectURL","src","InsertIntoPDFView","fileReader","useState","isTarczaView","fileContent","setFileContent","organProwadzacy","setOrganProwadzacy","Date","dateSporządzenia","setDateSporządzenia","numberTarcza","setNumberTarcza","number","setNumber","scale","setScale","setShowFile","x","setX","y","setY","setBytes","pdfBytes","setpdfBytes","ramkaBytes","setRamkaBytes","deegrees","setDeegrees","useEffect","prepareRamkaTarcza4","modifyPdf","handleFileRead","e","content","result","console","log","a","fetch","ramkaTarczaZMiastem","then","res","arrayBuffer","pngImageBytes","PDFDocument","create","imgpdf","embedPng","pngImage","addPage","width","height","pngDims","embedFont","StandardFonts","Helvetica","helveticaFont","pages","getPages","firstPage","drawImage","drawText","size","font","color","rgb","toLocaleDateString","setRotation","degrees","save","load","pdfDocContent","pdfDoc","copyPages","ramkapage","contentPage","embedPage","embeddedPageRamka","embeddedPageContent","embeddedPageRamkaDims","embeddedPageContentDims","page","drawPage","getWidth","getHeight","rotate","handleOrganChange","value","className","onClick","onChange","event","target","files","FileReader","onloadend","readAsArrayBuffer","accept","multiple","defaultValue","Number","id","checked","htmlFor","moment","format","newDate","handleDateSporządzeniaChange","toString","asyncForEach","array","callback","index","length","PDFMergeView","setFiles","setResult","arr","filess","push","prepareMergedPDF","f","pdf","fileArray","Array","from","forEach","file","onload","handleChange","map","key","Nav","history","useHistory","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21ea7d67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ramkaV5.3ce455ae.png\";","module.exports = __webpack_public_path__ + \"static/media/ramka.3144896e.png\";","module.exports = __webpack_public_path__ + \"static/media/tarcza4.19855605.png\";","\nimport React from 'react';\n\nexport const FileDisplay = (props) => {\n    //useCallback na bytes\n    const ramkaBlob = new Blob([props.bytes], { type: \"application/pdf\" });\n    const ramkaBlobUrl = URL.createObjectURL(ramkaBlob);\n    return (\n        <iframe src={ramkaBlobUrl}></iframe>\n    )\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport ramka from \"../ramka.png\";\nimport ramkaTarcza from \"../tarcza4.png\";\nimport ramkaTarczaZMiastem from \"../ramkaV5.png\";\n\n\nimport * as moment from \"moment\";\nimport { PDFDocument, rgb, StandardFonts, degrees } from \"pdf-lib\";\n\nimport { FileDisplay } from \"../components/FileDisplay/FileDisplay\";\n\nfunction InsertIntoPDFView() {\n  const [isTarczaView, setTarczView] = useState(true);\n  const [fileContent, setFileContent] = useState(\"\");\n\n  const [organProwadzacy, setOrganProwadzacy] = useState(false);\n\n  // const [date, setDate] = useState(new Date());\n  const [dateSporządzenia, setDateSporządzenia] = useState(new Date());\n\n  const [numberTarcza, setNumberTarcza] = useState(\"Gd.III.6642.2.\"); // GKN-I.\n  const [number, setNumber] = useState(\"Gd.III.6642.2.\"); // P.1425.2020.\n\n  const [scale, setScale] = useState(0.5);\n  const [showFile, setShowFile] = useState(false);\n\n  const [x, setX] = useState(20);\n  const [y, setY] = useState(20);\n\n  const [bytes, setBytes] = useState(null);\n\n  const [pdfBytes, setpdfBytes] = useState(null);\n\n  const [ramkaBytes, setRamkaBytes] = useState(null);\n  const [deegrees, setDeegrees] = useState(0);\n\n\n  useEffect(() => {\n    // isTarczaView ? prepareRamkaTarcza4() : prepareRamka();\n    prepareRamkaTarcza4();\n\n    fileContent && modifyPdf();\n  }, [number,numberTarcza, dateSporządzenia, deegrees, isTarczaView, organProwadzacy]);\n\n  useEffect(() => {\n    fileContent && modifyPdf();\n  }, [x, y, scale]);\n\n  let fileReader;\n\n  const handleFileRead = (e) => {\n    const content = fileReader.result;\n    console.log(content);\n    setFileContent(content);\n  };\n\n  const handleChange = (content) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsArrayBuffer(content);\n    console.log(fileReader, fileReader.result, fileContent);\n  };\n\n  // const prepareRamka = async () => {\n  //   const pngImageBytes = await fetch(ramka).then((res) => res.arrayBuffer());\n\n  //   const imgpdf = await PDFDocument.create();\n  //   const pngImage = await imgpdf.embedPng(pngImageBytes);\n  //   imgpdf.addPage([pngImage.width, pngImage.height]);\n\n  //   const pngDims = pngImage.scale(1); // wielkosc ramki\n  //   const helveticaFont = await imgpdf.embedFont(StandardFonts.HelveticaBold);\n\n  //   const pages = imgpdf.getPages();\n  //   const firstPage = pages[0];\n\n  //   firstPage.drawImage(pngImage, {\n  //     x: 0,\n  //     y: 0,\n  //     width: pngDims.width,\n  //     height: pngDims.height,\n  //   });\n\n  //   // data\n  //   firstPage.drawText(date.toLocaleDateString(), {\n  //     x: 200,\n  //     y: 100,\n  //     size: 10,\n  //     font: helveticaFont,\n  //     color: rgb(0.95, 0.1, 0.1),\n  //   });\n\n  //   //numerek\n  //   firstPage.drawText(number, {\n  //     x: 200,\n  //     y: 125,\n  //     size: 12,\n  //     font: helveticaFont,\n  //     color: rgb(0.95, 0.1, 0.1),\n  //   });\n\n  //   firstPage.setRotation(degrees(deegrees))\n\n\n  //   let ramkaBytes = await imgpdf.save();\n  //   setRamkaBytes(ramkaBytes);\n  //   return imgpdf;\n  // };\n\n  const prepareRamkaTarcza4 = async () => {\n    const pngImageBytes = await fetch(ramkaTarczaZMiastem).then((res) => res.arrayBuffer());\n\n    const imgpdf = await PDFDocument.create();\n    const pngImage = await imgpdf.embedPng(pngImageBytes);\n    imgpdf.addPage([pngImage.width, pngImage.height]);\n\n    const pngDims = pngImage.scale(1); // wielkosc ramki\n    const helveticaFont = await imgpdf.embedFont(StandardFonts.Helvetica);\n\n    const pages = imgpdf.getPages();\n    const firstPage = pages[0];\n\n    firstPage.drawImage(pngImage, {\n      x: 0,\n      y: 0,\n      width: pngDims.width,\n      height: pngDims.height,\n    });\n\n    // organ prowadzacy oanstwowy zasob\n    firstPage.drawText(`${organProwadzacy ? 'STAROSTA RADOMSKI' : 'PREZYDENT MIASTA RADOMIA'}`, {\n      x: organProwadzacy ? 310 : 270,\n      y: 283,\n      size: 16,\n      font: helveticaFont,\n      color: rgb(0.2, 0.2, 0.2),\n    });\n\n    // indetyfikator zgłoszenia prac geodezyjnych\n    firstPage.drawText(numberTarcza, {\n      x: 305,\n      y: 240,\n      size: 16,\n      font: helveticaFont,\n      color: rgb(0.2, 0.2, 0.2),\n    });\n\n    // numer i data sporzadzenia dokumentu potwierdzajacego...\n    firstPage.drawText(number, {\n      x: 305,\n      y: 130,\n      size: 16,\n      font: helveticaFont,\n      color: rgb(0.2, 0.2, 0.2),\n    });\n    firstPage.drawText(`z dn. ${dateSporządzenia.toLocaleDateString()}`, {\n      x: 330,\n      y: 110,\n      size: 16,\n      font: helveticaFont,\n      color: rgb(0.2, 0.2, 0.2),\n    });\n\n\n    // data przy podpisie\n    firstPage.drawText(`Radom, dnia ${dateSporządzenia.toLocaleDateString()}r.`, {\n      x: 5,\n      y: 10,\n      size: 12,\n      font: helveticaFont,\n      color: rgb(0.2, 0.2, 0.2),\n    });\n\n\n\n    firstPage.setRotation(degrees(deegrees))\n\n\n    let ramkaBytes = await imgpdf.save();\n    setRamkaBytes(ramkaBytes);\n    return imgpdf;\n  };\n\n  async function modifyPdf() {\n    // let imgpdf = isTarczaView ? await prepareRamkaTarcza4() : await prepareRamka();\n    let imgpdf = await prepareRamkaTarcza4();\n\n    const pdfDocContent = await PDFDocument.load(fileContent);\n\n    const pdfDoc = await PDFDocument.create();\n\n    let [ramkapage] = await pdfDoc.copyPages(imgpdf, [0]);\n    let [contentPage] = await pdfDoc.copyPages(pdfDocContent, [0]);\n\n    let embeddedPageRamka = await pdfDoc.embedPage(ramkapage);\n    let embeddedPageContent = await pdfDoc.embedPage(contentPage);\n    \n    const embeddedPageRamkaDims = embeddedPageRamka.scale(scale);\n    const embeddedPageContentDims = embeddedPageContent.scale(1);\n\n    const page = pdfDoc.addPage([\n      embeddedPageContentDims.width,\n      embeddedPageContentDims.height,\n    ]);\n\n    page.drawPage(embeddedPageContent, {\n      ...embeddedPageContentDims,\n      x: 0,\n      y: 0,\n    });\n\n    page.drawPage(embeddedPageRamka, {\n      ...embeddedPageRamkaDims,\n      x: page.getWidth() - embeddedPageRamkaDims.width - x,\n      y: page.getHeight() - embeddedPageRamkaDims.height - y,\n      rotate: degrees(-deegrees)\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    setBytes(pdfBytes);\n    setpdfBytes(pdfBytes);\n    setShowFile(true);\n  }\n\n  // const handleDateChange = (value) => {\n  //   let newDate = new Date(value);\n  //   setDate(newDate);\n  // };\n\n  const handleDateSporządzeniaChange = (value) => {\n    let newDate = new Date(value);\n    setDateSporządzenia(newDate);\n  };\n\n  // const handleViewChange = () => {\n  //   prepareRamka();\n  //   // isTarczaView ? prepareRamka() : prepareRamkaTarcza4();\n  //   setTarczView(!isTarczaView);\n\n  // }\n\n  const handleOrganChange= (value) => {\n    if(value) {\n      setOrganProwadzacy(true);\n      setNumber('GKN-I.6042.1.');\n      setNumberTarcza('GKN-I.6042.1.');\n    } else {\n      setOrganProwadzacy(false);\n      setNumber('Gd.III.6642.2.');\n      setNumberTarcza('Gd.III.6642.2.');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {fileContent && (\n          <button type=\"submit\" onClick={async () => await modifyPdf()}>\n            RUN\n          </button>\n        )}\n\n        <div className=\"row\">\n          <div className=\"column\">\n            <div>\n              <label>plik pdf: </label>\n              <input\n                type=\"file\"\n                onChange={(event) => handleChange(event.target.files[0])}\n                accept=\".pdf\"\n                multiple={true}\n              ></input>\n            </div>\n\n            <div>\n              <label>skala ramki: </label>\n              <input\n                type=\"number\"\n                defaultValue={scale}\n                onChange={(event) => setScale(Number(event.target.value))}\n              />\n            </div>\n            <div>\n              <label>x: </label>\n              <input\n                type=\"number\"\n                defaultValue={x}\n                onChange={async (event) => setX(Number(event.target.value))}\n              />\n            </div>\n            <div>\n              <label>y: </label>\n              <input\n                type=\"number\"\n                defaultValue={y}\n                onChange={(event) => setY(Number(event.target.value))}\n              />\n            </div>\n          </div>\n          <div className=\"column\">\n          <div>\n              <button onClick={() => deegrees < 360 ? setDeegrees(deegrees + 90) : setDeegrees(90)}>Rotacja</button>\n            </div>\n            {/* <div>\n              <button onClick={() => handleViewChange()}>Zmień ramkę</button>\n            </div> */}\n            \n            <input type=\"radio\" \n            id=\"miasto\" \n            value={organProwadzacy} \n            onChange={() => handleOrganChange(false)}\n            checked={!organProwadzacy}\n            />\n            <label htmlFor=\"miasto\">Miasto</label>\n            <input type=\"radio\" id=\"wies\"  \n            checked={organProwadzacy}\n            value={organProwadzacy}  onChange={() => handleOrganChange(true)}/>\n            <label htmlFor=\"wies\">Wieś</label>\n\n            {isTarczaView &&\n            <div>\n              <label>Id ewidencyjny materiału: </label>\n              <input\n                type=\"text\"\n                value={numberTarcza}\n                onChange={(event) => setNumberTarcza(event.target.value)}\n              />\n            </div> }\n\n            <div>\n              <label>numer roboty: </label>\n              <input\n                type=\"text\"\n                value={number}\n                onChange={(event) => setNumber(event.target.value)}\n              />\n            </div>\n\n            {/* <div>\n              <label>data: </label>\n              <input\n                type=\"date\"\n                defaultValue={moment(date).format(\"YYYY-MM-DD\")}\n                onChange={(event) => {\n                  handleDateChange(event.target.value.toString());\n                }}\n              />\n            </div> */}\n            {isTarczaView &&\n            <div>\n              <label>data sporządzenia: </label>\n              <input\n                type=\"date\"\n                defaultValue={moment(dateSporządzenia).format(\"YYYY-MM-DD\")}\n                onChange={(event) => {\n                  handleDateSporządzeniaChange(event.target.value.toString());\n                }}\n              />\n            </div>}\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"column-input\">\n            {pdfBytes && <FileDisplay bytes={pdfBytes} />}\n          </div>\n          <div className=\"column-input\">\n            <FileDisplay bytes={ramkaBytes} />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default InsertIntoPDFView;\n","export async function asyncForEach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index], index, array);\n    }\n  }","import React, { useState } from \"react\";\nimport { asyncForEach } from \"../helpers/asyncForEach\";\nimport { PDFDocument, degrees, StandardFonts } from \"pdf-lib\";\nimport { FileDisplay } from \"../components/FileDisplay/FileDisplay\";\n\nfunction PDFMergeView() {\n  const [files, setFiles] = useState([]);\n  const [result, setResult] = useState([]);\n\n  let arr = [];\n  let filess = [];\n\n  const handleFileRead = (e) => {\n    const content = e.target.result;\n    arr.push(content);\n    if (arr.length === filess.length) {\n      setFiles(arr);\n    }\n  };\n\n  const handleChange = (files) => {\n    let fileArray = Array.from(files);\n    filess = Array.from(fileArray);\n\n    fileArray.forEach((file) => {\n      let fileReader = new FileReader();\n      fileReader.onload = handleFileRead;\n      fileReader.readAsArrayBuffer(file);\n    });\n  };\n\n  const prepareMergedPDF = async () => {\n    console.log(\"bytes\", files);\n    const pdfDoc = await PDFDocument.create();\n\n    await asyncForEach(files, async (f) => {\n      let pdf = await PDFDocument.load(f);\n      let [contentPage] = await pdfDoc.copyPages(pdf, [0]);\n      let embeddedPageContent = await pdfDoc.embedPage(contentPage);\n      const page = pdfDoc.addPage([\n        embeddedPageContent.width,\n        embeddedPageContent.height,\n      ]);\n      page.drawPage(embeddedPageContent, {\n        height: embeddedPageContent.height,\n        width: embeddedPageContent.width,\n        x: 1,\n        y: 1,\n      });\n\n      if (page.getWidth() > page.getHeight()) {\n        page.setRotation(degrees(90));\n      }\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    setResult(pdfBytes);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {files.length > 0 && <button type=\"submit\" onClick={async () => await prepareMergedPDF()}>\n          RUN\n        </button>}\n\n        <div className=\"row\">\n          {result.length > 0 && <FileDisplay bytes={result} />}\n          <div className=\"column\">\n            <div>\n              <label> plik pdf: </label>\n              <input\n                type=\"file\"\n                onChange={(event) => handleChange(event.target.files)}\n                accept=\".pdf\"\n                multiple={true}\n              ></input>\n            </div>\n            {files.map((f, index) => (\n              <FileDisplay key={index} bytes={f} />\n            ))}\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default PDFMergeView;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Nav = () => {\n  let history = useHistory();\n  return (\n    <>\n      <button onClick={() => history.push(\"/pdfHelper/\")}>Dodaj pieczątke</button>\n      <button onClick={() => history.push(\"/pdfHelper/merge\")}>połącz pliki</button>\n    </>\n  );\n};\n","import React from \"react\";\nimport InsertIntoPDFView from './view/InsertIntoPDFView';\nimport PDFMergeView from './view/PDFMergeView';\nimport { Switch,BrowserRouter, Route } from 'react-router-dom';\nimport { Nav } from './components/Nav/Nav';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Nav/>\n      <Switch>\n        <Route path=\"/pdfHelper/\" exact={true} component={InsertIntoPDFView} />\n        <Route path=\"/pdfHelper/merge\" exact={true} component={PDFMergeView} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}