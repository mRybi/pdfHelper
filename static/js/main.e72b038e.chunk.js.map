{"version":3,"sources":["ramka.png","s.png","tarcza4.png","components/FileDisplay/FileDisplay.js","view/InsertIntoPDFView.js","helpers/asyncForEach.js","view/PDFMergeView.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FileDisplay","props","ramkaBlob","Blob","bytes","type","ramkaBlobUrl","URL","createObjectURL","src","InsertIntoPDFView","fileReader","useState","isTarczaView","setTarczView","fileContent","setFileContent","organProwadzacy","setOrganProwadzacy","Date","date","setDate","dateSporządzenia","setDateSporządzenia","number","setNumber","numberTarcza","setNumberTarcza","scale","setScale","setShowFile","x","setX","y","setY","setBytes","pdfBytes","setpdfBytes","ramkaBytes","setRamkaBytes","deegrees","setDeegrees","useEffect","prepareRamkaTarcza4","prepareRamka","modifyPdf","handleFileRead","e","content","result","console","log","a","fetch","ramka","then","res","arrayBuffer","pngImageBytes","PDFDocument","create","imgpdf","embedPng","pngImage","addPage","width","height","pngDims","embedFont","StandardFonts","HelveticaBold","helveticaFont","pages","getPages","firstPage","drawImage","drawText","toLocaleDateString","size","font","color","rgb","setRotation","degrees","save","ramkaTarczaZMiastem","Helvetica","load","pdfDocContent","pdfDoc","copyPages","ramkapage","contentPage","embedPage","embeddedPageRamka","embeddedPageContent","embeddedPageRamkaDims","embeddedPageContentDims","page","drawPage","getWidth","getHeight","rotate","handleOrganChange","value","className","onClick","onChange","event","target","files","FileReader","onloadend","readAsArrayBuffer","accept","multiple","defaultValue","Number","id","checked","htmlFor","moment","format","newDate","handleDateChange","toString","handleDateSporządzeniaChange","asyncForEach","array","callback","index","length","PDFMergeView","setFiles","setResult","arr","filess","push","prepareMergedPDF","f","pdf","fileArray","Array","from","forEach","file","onload","handleChange","map","key","Nav","history","useHistory","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e72b038e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ramka.3144896e.png\";","module.exports = __webpack_public_path__ + \"static/media/s.351846d0.png\";","module.exports = __webpack_public_path__ + \"static/media/tarcza4.19855605.png\";","\nimport React from 'react';\n\nexport const FileDisplay = (props) => {\n    //useCallback na bytes\n    const ramkaBlob = new Blob([props.bytes], { type: \"application/pdf\" });\n    const ramkaBlobUrl = URL.createObjectURL(ramkaBlob);\n    return (\n        <iframe src={ramkaBlobUrl}></iframe>\n    )\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport ramka from \"../ramka.png\";\nimport ramkaTarcza from \"../tarcza4.png\";\nimport ramkaTarczaZMiastem from \"../s.png\";\n\n\nimport * as moment from \"moment\";\nimport { PDFDocument, rgb, StandardFonts, degrees } from \"pdf-lib\";\n\nimport { FileDisplay } from \"../components/FileDisplay/FileDisplay\";\n\nfunction InsertIntoPDFView() {\n  const [isTarczaView, setTarczView] = useState(true);\n  const [fileContent, setFileContent] = useState(\"\");\n\n  const [organProwadzacy, setOrganProwadzacy] = useState(false);\n\n  const [date, setDate] = useState(new Date());\n  const [dateSporządzenia, setDateSporządzenia] = useState(new Date());\n\n  const [number, setNumber] = useState(\"P.1463.2020.\"); // P.1425.2020.\n  const [numberTarcza, setNumberTarcza] = useState(\"Gd.III.6642.2.\"); // GKN-I.\n\n  const [scale, setScale] = useState(0.5);\n  const [showFile, setShowFile] = useState(false);\n\n  const [x, setX] = useState(20);\n  const [y, setY] = useState(20);\n\n  const [bytes, setBytes] = useState(null);\n\n  const [pdfBytes, setpdfBytes] = useState(null);\n\n  const [ramkaBytes, setRamkaBytes] = useState(null);\n  const [deegrees, setDeegrees] = useState(0);\n\n\n  useEffect(() => {\n    isTarczaView ? prepareRamkaTarcza4() : prepareRamka();\n    fileContent && modifyPdf();\n  }, [number,numberTarcza, date, dateSporządzenia, deegrees, isTarczaView, organProwadzacy]);\n\n  useEffect(() => {\n    fileContent && modifyPdf();\n  }, [x, y, scale]);\n\n  let fileReader;\n\n  const handleFileRead = (e) => {\n    const content = fileReader.result;\n    console.log(content);\n    setFileContent(content);\n  };\n\n  const handleChange = (content) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsArrayBuffer(content);\n    console.log(fileReader, fileReader.result, fileContent);\n  };\n\n  const prepareRamka = async () => {\n    const pngImageBytes = await fetch(ramka).then((res) => res.arrayBuffer());\n\n    const imgpdf = await PDFDocument.create();\n    const pngImage = await imgpdf.embedPng(pngImageBytes);\n    imgpdf.addPage([pngImage.width, pngImage.height]);\n\n    const pngDims = pngImage.scale(1); // wielkosc ramki\n    const helveticaFont = await imgpdf.embedFont(StandardFonts.HelveticaBold);\n\n    const pages = imgpdf.getPages();\n    const firstPage = pages[0];\n\n    firstPage.drawImage(pngImage, {\n      x: 0,\n      y: 0,\n      width: pngDims.width,\n      height: pngDims.height,\n    });\n\n    // data\n    firstPage.drawText(date.toLocaleDateString(), {\n      x: 200,\n      y: 100,\n      size: 10,\n      font: helveticaFont,\n      color: rgb(0.95, 0.1, 0.1),\n    });\n\n    //numerek\n    firstPage.drawText(number, {\n      x: 200,\n      y: 125,\n      size: 12,\n      font: helveticaFont,\n      color: rgb(0.95, 0.1, 0.1),\n    });\n\n    firstPage.setRotation(degrees(deegrees))\n\n\n    let ramkaBytes = await imgpdf.save();\n    setRamkaBytes(ramkaBytes);\n    return imgpdf;\n  };\n\n  const prepareRamkaTarcza4 = async () => {\n    const pngImageBytes = await fetch(ramkaTarczaZMiastem).then((res) => res.arrayBuffer());\n\n    const imgpdf = await PDFDocument.create();\n    const pngImage = await imgpdf.embedPng(pngImageBytes);\n    imgpdf.addPage([pngImage.width, pngImage.height]);\n\n    const pngDims = pngImage.scale(1); // wielkosc ramki\n    const helveticaFont = await imgpdf.embedFont(StandardFonts.Helvetica);\n\n    const pages = imgpdf.getPages();\n    const firstPage = pages[0];\n\n    firstPage.drawImage(pngImage, {\n      x: 0,\n      y: 0,\n      width: pngDims.width,\n      height: pngDims.height,\n    });\n\n    // data sporządzenia\n    firstPage.drawText(`${organProwadzacy ? 'STAROSTA RADOMSKI' : 'PREZYDENT MIASTA RADOMIA'}`, {\n      x: organProwadzacy ? 360 : 320,\n      y: 320,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n\n    // data\n    firstPage.drawText(date.toLocaleDateString(), {\n      x: 410,\n      y: 190,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n\n    // data sporządzenia\n    firstPage.drawText(numberTarcza, {\n      x: 370,\n      y: 80,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n    firstPage.drawText(`z dn. ${dateSporządzenia.toLocaleDateString()}`, {\n      x: 390,\n      y: 60,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n\n    firstPage.drawText(numberTarcza, {\n      x: 370,\n      y: 260,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n\n    //numerek\n    firstPage.drawText(number, {\n      x: 370,\n      y: 240,\n      size: 17,\n      font: helveticaFont,\n      color: rgb(0, 0, 0),\n    });\n\n\n    firstPage.setRotation(degrees(deegrees))\n\n\n    let ramkaBytes = await imgpdf.save();\n    setRamkaBytes(ramkaBytes);\n    return imgpdf;\n  };\n\n  async function modifyPdf() {\n    let imgpdf = isTarczaView ? await prepareRamkaTarcza4() : await prepareRamka();\n\n    const pdfDocContent = await PDFDocument.load(fileContent);\n\n    const pdfDoc = await PDFDocument.create();\n\n    let [ramkapage] = await pdfDoc.copyPages(imgpdf, [0]);\n    let [contentPage] = await pdfDoc.copyPages(pdfDocContent, [0]);\n\n    let embeddedPageRamka = await pdfDoc.embedPage(ramkapage);\n    let embeddedPageContent = await pdfDoc.embedPage(contentPage);\n    \n    const embeddedPageRamkaDims = embeddedPageRamka.scale(scale);\n    const embeddedPageContentDims = embeddedPageContent.scale(1);\n\n    const page = pdfDoc.addPage([\n      embeddedPageContentDims.width,\n      embeddedPageContentDims.height,\n    ]);\n\n    page.drawPage(embeddedPageContent, {\n      ...embeddedPageContentDims,\n      x: 0,\n      y: 0,\n    });\n\n    page.drawPage(embeddedPageRamka, {\n      ...embeddedPageRamkaDims,\n      x: page.getWidth() - embeddedPageRamkaDims.width - x,\n      y: page.getHeight() - embeddedPageRamkaDims.height - y,\n      rotate: degrees(-deegrees)\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    setBytes(pdfBytes);\n    setpdfBytes(pdfBytes);\n    setShowFile(true);\n  }\n\n  const handleDateChange = (value) => {\n    let newDate = new Date(value);\n    setDate(newDate);\n  };\n\n  const handleDateSporządzeniaChange = (value) => {\n    let newDate = new Date(value);\n    setDateSporządzenia(newDate);\n  };\n\n  const handleViewChange = () => {\n    isTarczaView ? prepareRamka() : prepareRamkaTarcza4();\n    setTarczView(!isTarczaView);\n\n  }\n\n  const handleOrganChange= (value) => {\n    if(value) {\n      setOrganProwadzacy(true);\n      setNumber('P.1425.2020');\n      setNumberTarcza('GKN-I.');\n    } else {\n      setOrganProwadzacy(false);\n      setNumber('P.1463.2020');\n      setNumberTarcza('Gd.III.6642.2.');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {fileContent && (\n          <button type=\"submit\" onClick={async () => await modifyPdf()}>\n            RUN\n          </button>\n        )}\n\n        <div className=\"row\">\n          <div className=\"column\">\n            <div>\n              <label>plik pdf: </label>\n              <input\n                type=\"file\"\n                onChange={(event) => handleChange(event.target.files[0])}\n                accept=\".pdf\"\n                multiple={true}\n              ></input>\n            </div>\n\n            <div>\n              <label>skala ramki: </label>\n              <input\n                type=\"number\"\n                defaultValue={scale}\n                onChange={(event) => setScale(Number(event.target.value))}\n              />\n            </div>\n            <div>\n              <label>x: </label>\n              <input\n                type=\"number\"\n                defaultValue={x}\n                onChange={async (event) => setX(Number(event.target.value))}\n              />\n            </div>\n            <div>\n              <label>y: </label>\n              <input\n                type=\"number\"\n                defaultValue={y}\n                onChange={(event) => setY(Number(event.target.value))}\n              />\n            </div>\n          </div>\n          <div className=\"column\">\n          <div>\n              <button onClick={() => deegrees < 360 ? setDeegrees(deegrees + 90) : setDeegrees(90)}>Rotacja</button>\n            </div>\n            <div>\n              <button onClick={() => handleViewChange()}>Zmień ramkę</button>\n            </div>\n            \n            <input type=\"radio\" \n            id=\"miasto\" \n            value={organProwadzacy} \n            onChange={() => handleOrganChange(false)}\n            checked={!organProwadzacy}\n            />\n            <label htmlFor=\"miasto\">Miasto</label>\n            <input type=\"radio\" id=\"wies\"  \n            checked={organProwadzacy}\n            value={organProwadzacy}  onChange={() => handleOrganChange(true)}/>\n            <label htmlFor=\"wies\">Wieś</label>\n\n            {isTarczaView &&\n            <div>\n              <label>Id ewidencyjny materiału: </label>\n              <input\n                type=\"text\"\n                value={numberTarcza}\n                onChange={(event) => setNumberTarcza(event.target.value)}\n              />\n            </div> }\n\n            <div>\n              <label>numer roboty: </label>\n              <input\n                type=\"text\"\n                value={number}\n                onChange={(event) => setNumber(event.target.value)}\n              />\n            </div>\n\n            <div>\n              <label>data: </label>\n              <input\n                type=\"date\"\n                defaultValue={moment(date).format(\"YYYY-MM-DD\")}\n                onChange={(event) => {\n                  handleDateChange(event.target.value.toString());\n                }}\n              />\n            </div>\n            {isTarczaView &&\n            <div>\n              <label>data sporządzenia: </label>\n              <input\n                type=\"date\"\n                defaultValue={moment(dateSporządzenia).format(\"YYYY-MM-DD\")}\n                onChange={(event) => {\n                  handleDateSporządzeniaChange(event.target.value.toString());\n                }}\n              />\n            </div>}\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"column-input\">\n            {pdfBytes && <FileDisplay bytes={pdfBytes} />}\n          </div>\n          <div className=\"column-input\">\n            <FileDisplay bytes={ramkaBytes} />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default InsertIntoPDFView;\n","export async function asyncForEach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index], index, array);\n    }\n  }","import React, { useState } from \"react\";\nimport { asyncForEach } from \"../helpers/asyncForEach\";\nimport { PDFDocument, degrees, StandardFonts } from \"pdf-lib\";\nimport { FileDisplay } from \"../components/FileDisplay/FileDisplay\";\n\nfunction PDFMergeView() {\n  const [files, setFiles] = useState([]);\n  const [result, setResult] = useState([]);\n\n  let arr = [];\n  let filess = [];\n\n  const handleFileRead = (e) => {\n    const content = e.target.result;\n    arr.push(content);\n    if (arr.length === filess.length) {\n      setFiles(arr);\n    }\n  };\n\n  const handleChange = (files) => {\n    let fileArray = Array.from(files);\n    filess = Array.from(fileArray);\n\n    fileArray.forEach((file) => {\n      let fileReader = new FileReader();\n      fileReader.onload = handleFileRead;\n      fileReader.readAsArrayBuffer(file);\n    });\n  };\n\n  const prepareMergedPDF = async () => {\n    console.log(\"bytes\", files);\n    const pdfDoc = await PDFDocument.create();\n\n    await asyncForEach(files, async (f) => {\n      let pdf = await PDFDocument.load(f);\n      let [contentPage] = await pdfDoc.copyPages(pdf, [0]);\n      let embeddedPageContent = await pdfDoc.embedPage(contentPage);\n      const page = pdfDoc.addPage([\n        embeddedPageContent.width,\n        embeddedPageContent.height,\n      ]);\n      page.drawPage(embeddedPageContent, {\n        height: embeddedPageContent.height,\n        width: embeddedPageContent.width,\n        x: 1,\n        y: 1,\n      });\n\n      if (page.getWidth() > page.getHeight()) {\n        page.setRotation(degrees(90));\n      }\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    setResult(pdfBytes);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {files.length > 0 && <button type=\"submit\" onClick={async () => await prepareMergedPDF()}>\n          RUN\n        </button>}\n\n        <div className=\"row\">\n          {result.length > 0 && <FileDisplay bytes={result} />}\n          <div className=\"column\">\n            <div>\n              <label> plik pdf: </label>\n              <input\n                type=\"file\"\n                onChange={(event) => handleChange(event.target.files)}\n                accept=\".pdf\"\n                multiple={true}\n              ></input>\n            </div>\n            {files.map((f, index) => (\n              <FileDisplay key={index} bytes={f} />\n            ))}\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default PDFMergeView;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Nav = () => {\n  let history = useHistory();\n  return (\n    <>\n      <button onClick={() => history.push(\"/pdfHelper/\")}>Dodaj pieczątke</button>\n      <button onClick={() => history.push(\"/pdfHelper/merge\")}>połącz pliki</button>\n    </>\n  );\n};\n","import React from \"react\";\nimport InsertIntoPDFView from './view/InsertIntoPDFView';\nimport PDFMergeView from './view/PDFMergeView';\nimport { Switch,BrowserRouter, Route } from 'react-router-dom';\nimport { Nav } from './components/Nav/Nav';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Nav/>\n      <Switch>\n        <Route path=\"/pdfHelper/\" exact={true} component={InsertIntoPDFView} />\n        <Route path=\"/pdfHelper/merge\" exact={true} component={PDFMergeView} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}